<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yang.www.dao.BlogTypeDao">

	<resultMap type="BlogType" id="BlogTypeResult">
		<result property="typeId" column="type_id"/>
		<result property="typeName" column="type_name"/>
		<result property="ordinal" column="ordinal"/>
	</resultMap>

	<delete id="delete" parameterType="java.lang.Integer">
		delete from blog_type where type_id=#{typeId}
	</delete>

	<insert id="add">
		INSERT INTO blog_type VALUES (null,#{typeName},#{ordinal})
	</insert>

	<update id="update" parameterType="BlogType">
		update blog_type
		<set>
			<if test="typeName!=null and typeName!=''">
				type_name=#{typeName},
			</if>
			<if test="ordinal!=null">
				ordinal=#{ordinal},
			</if>
		</set>
		where type_id=#{typeId}
	</update>
	
	<select id="getBlogTypes"  resultMap="BlogTypeResult">
	SELECT t2.type_id,t2.type_name,COUNT(t1.blog_id) AS blogCount FROM blog t1 RIGHT JOIN blog_type t2 ON t1.type_id=t2.type_id GROUP BY t2.type_name ORDER BY t2.ordinal
	</select>

	<select id="findById"  resultMap="BlogTypeResult">
		SELECT * from blog_type WHERE type_id=#{typeId}
	</select>

	<select id="list" parameterType="java.util.Map" resultMap="BlogTypeResult">
		SELECT * from blog_type
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>

	<select id="getTotal" parameterType="java.util.Map" resultType="java.lang.Long">
		select count(*) from blog_type
	</select>
</mapper> 